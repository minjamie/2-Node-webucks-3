// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id      Int       @id @default(autoincrement()) @db.TinyInt
  name    String    @db.VarChar(16)
  product Product[] //[]를 뒤에다 적어주는 건...1:다라서, Product테이블에 대응되는 로우가 많이 들어갈 수 있다는 거?!

  @@map("categories")
}

model Product {
  id          Int      @id @default(autoincrement()) @db.TinyInt
  koreanName  String   @map("korean_name") @db.VarChar(50)
  englishName String   @map("english_name") @db.VarChar(50)
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int      @map("category_id") @db.TinyInt

  @@map("products")
}

model Image {
  id        Int    @id @default(autoincrement()) @db.TinyInt
  imageUrl  String @db.VarChar(100)
  productId Int    @map("product_id") @db.TinyInt

  @@map("images")
}

model Allergy {
  id   Int    @id @default(autoincrement()) @db.TinyInt
  name String @db.VarChar(16)

  @@map("allergies")
}

model ProductAllergy {
  id        Int @id @default(autoincrement()) @db.TinyInt
  productId Int @map("product_id") @db.TinyInt
  allergyId Int @map("allergy_id") @db.TinyInt

  @@map("product_allergies")
}

model Nutrition {
  id        Int    @id @default(autoincrement()) @db.TinyInt
  name      String @db.VarChar(16)
  productId Int    @map("product_id") @db.TinyInt
  amount    Int

  @@map("nutritions")
}

model User {
  id            Int     @id @default(autoincrement()) @db.TinyInt
  email         String  @unique @db.VarChar(50)
  password      String  @db.VarChar(50)
  username      String? @db.VarChar(16)
  address       String? @db.VarChar(100)
  phone_number  String? @db.VarChar(16)
  policy_agreed Boolean @default(true)

  @@map("users")
}
