// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  products Product[]

  @@map("categories")
}

model Product {
  id               Int                @id @default(autoincrement())
  category         Category           @relation(fields: [categoryId], references: [id])
  categoryId       Int                @map("category_id")
  koreanName       String             @map("korean_name") @db.VarChar(100)
  englishName      String             @map("english_name") @db.VarChar(100)
  images           Image[]
  productAllergies ProductAllergies[]
  descriptions     Description[]
  nutritionFacts   NutritionFact[]

  @@map("products")
}

model Image {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  imageUrl  String  @map("image_url")
  products  Product @relation(fields: [productId], references: [id])

  @@map("images")
}

model Allergy {
  id               Int                @id @default(autoincrement())
  allergen         String
  productAllergies ProductAllergies[]

  @@map("allergies")
}

model ProductAllergies {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  allergyId Int     @map("allergy_id")
  products  Product @relation(fields: [productId], references: [id])
  allergies Allergy @relation(fields: [allergyId], references: [id])

  @@map("product_allergies")
}

model Description {
  id          Int     @id @default(autoincrement())
  productId   Int     @map("product_id")
  description String
  products    Product @relation(fields: [productId], references: [id])

  @@map("descriptions")
}

model NutritionFact {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  serveSize String  @map("serve_size")
  kcal      Float   @db.Double
  fat       Float   @db.Double
  protein   Float   @db.Double
  natrium   Float   @db.Double
  sugar     Float   @db.Double
  caffeine  Float   @db.Double
  products  Product @relation(fields: [productId], references: [id])

  @@map("nutrition_facts")
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique @db.VarChar(100)
  password     String  @db.VarChar(100)
  username     String? @db.VarChar(100)
  address      String? @db.VarChar(100)
  phoneNumber  String? @map("phone_number") @db.VarChar(100)
  policyAgreed Boolean @default(true) @map("policy_agreed")

  @@map("users")
}
